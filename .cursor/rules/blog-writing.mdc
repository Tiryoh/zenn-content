---
description:
globs: *.md
alwaysApply: false
---
# 技術ブログ執筆ガイドライン

## 【基本姿勢】

* **誇張しない・煽らない・強い表現を避ける**

  * 技術的にセンセーショナルな表現（「神」「絶対おすすめ」「誰でもできる」など）は使わない。

* **事実と感想を分けて書く**

  * 実際に行ったこと、確認したこと、仕様として書かれていること＝「事実」
  * 「便利だった」「使いづらい」「慣れが必要」など＝「感想」

## 【構成の流れ】

1. **導入（背景・目的）**

   * どんな課題や疑問を持って調べたのか。
   * この記事を読むと何が分かるのか。

2. **前提（環境やバージョンなど）**

   * OS・ツール・バージョンなど、再現や理解に必要な情報を明記。
   * 特殊な前提があれば最初に述べておく。

3. **やったこと（手順・調査・実装）**

   * スクリーンショットやコードを交えつつ、ステップごとに整理。
   * どこで詰まり、どうやって調べ、どのように解決したかを書く。

4. **補足（背景・選択理由）**

   * 「なぜこの方法を選んだか」「他の選択肢はあったか」など、判断基準を言語化。
   * 単なる手順でなく、思考の流れも伝える。

5. **結果・感想**

   * 「やってみてどうだったか」「今後どう活かせそうか」

6. **注意点・未解決のこと**

   * 再現できない場合の考慮点や、今後の課題など。
   * 読者が誤解したり過信したりしないように留意点があればそれも書く。

## 【文体・スタイル】

* **丁寧な書き言葉をベースに、口語すぎない**

  * 「〜でした」「〜と思います」を基本とし、「〜だ」「である」調と混ぜない。
  * 引用を除き「思ったんで」など口語は使わない。

* **見出しやコードブロックを整理して読みやすく**

  * Markdownの`###`やコードブロックを活用し、視認性を上げる。
  * 手順が長くなるときは番号や箇条書きを積極的に採用。

* **引用や出典は正確に記載**

  * 参考にしたURLやドキュメントへのリンクを必ず明記。


## 【参考になる価値観】

* **「未来の自分」に役立つ内容か？**
* **「初めて読む他人」が理解できるか？**
* **読者が再現・応用できる情報があるか？**
